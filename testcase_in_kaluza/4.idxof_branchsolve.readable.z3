(declare-variable  T_8  bool)
(declare-variable  T_SELECT_1  bool)
(declare-variable  T_SELECT_2  bool)
(declare-variable  T_6  bool)
(declare-variable  T_7  bool)
(declare-variable  T_5  bool)
%------------
(declare-variable  I0_7  Int)
(declare-variable  I0_5  Int)
(declare-variable  I0_2  Int)
(declare-variable  PCTEMP_LHS_3  Int)
(declare-variable  I1_5  Int)
(declare-variable  T_2  Int)
(declare-variable  I2_5  Int)
(declare-variable  PCTEMP_LHS_1  Int)
%------------
(declare-variable  T3_2  String)
(declare-variable  T0_7  String)
(declare-variable  T4_2  String)
(declare-variable  T3_7  String)
(declare-variable  T4_7  String)
(declare-variable  T0_2  String)
(declare-variable  T2_2  String)
(declare-variable  T3_5  String)
(declare-variable  T2_7  String)
(declare-variable  var_0xINPUT_8  String)
(declare-variable  T2_5  String)
(declare-variable  T1_5  String)
(declare-variable  T5_2  String)
(declare-variable  T1_7  String)
(declare-variable  PCTEMP_LHS_2  String)
(declare-variable  T1_2  String)
(declare-variable  T5_7  String)

%============================================

(assert (= T_SELECT_1 (not (=  PCTEMP_LHS_1 (- 0 1))) ) )
(assert (=> T_SELECT_1 (= PCTEMP_LHS_1 (+ I0_2 0) ) ) )
(assert (=> T_SELECT_1 (= var_0xINPUT_8 (Concat T0_2 T1_2) ) ) )
(assert (=> T_SELECT_1 (= I0_2 (Length T4_2) ) ) )
(assert (=> T_SELECT_1 (= 0 (Length T0_2) ) ) )
(assert (=> T_SELECT_1 (= T1_2 (Concat T2_2 T3_2) ) ) )
(assert (=> T_SELECT_1 (= T2_2 (Concat T4_2 T5_2) ) ) )
(assert (=> T_SELECT_1 (= T5_2 "=" ) ) )
(assert (=> (not T_SELECT_1) (= PCTEMP_LHS_1 (- 0 1) ) ) )
(assert (=> (not T_SELECT_1) (= var_0xINPUT_8 (Concat T0_2 T1_2) ) ) )
(assert (=> (not T_SELECT_1) (= 0 (Length T0_2) ) ) )
(assert (= T_2 (+ PCTEMP_LHS_1 1) ) )
(assert (= I0_5 (- I2_5 T_2) ) )
(assert  (>= T_2 0 ) )
(assert  (>= I2_5 T_2 ) )
(assert  (<= I2_5 I1_5 ) )
(assert (= I2_5 I1_5 ) )
(assert (= I0_5 (Length PCTEMP_LHS_2) ) )
(assert (= var_0xINPUT_8 (Concat T1_5 T2_5) ) )
(assert (= T2_5 (Concat PCTEMP_LHS_2 T3_5) ) )
(assert (= T_2 (Length T1_5) ) )
(assert (= I1_5 (Length var_0xINPUT_8) ) )
(assert (= T_SELECT_2 (not (=  PCTEMP_LHS_3 (- 0 1))) ) )
(assert (=> T_SELECT_2 (= PCTEMP_LHS_3 (+ I0_7 0) ) ) )
(assert (=> T_SELECT_2 (= PCTEMP_LHS_2 (Concat T0_7 T1_7) ) ) )
(assert (=> T_SELECT_2 (= I0_7 (Length T4_7) ) ) )
(assert (=> T_SELECT_2 (= 0 (Length T0_7) ) ) )
(assert (=> T_SELECT_2 (= T1_7 (Concat T2_7 T3_7) ) ) )
(assert (=> T_SELECT_2 (= T2_7 (Concat T4_7 T5_7) ) ) )
(assert (=> T_SELECT_2 (= T5_7 "X" ) ) )
(assert (=> (not T_SELECT_2) (= PCTEMP_LHS_3 (- 0 1) ) ) )
(assert (=> (not T_SELECT_2) (= PCTEMP_LHS_2 (Concat T0_7 T1_7) ) ) )
(assert (=> (not T_SELECT_2) (= 0 (Length T0_7) ) ) )
(assert (= T_5 (< PCTEMP_LHS_3 0) ) )
(assert T_5)
(assert (= T_6 (= PCTEMP_LHS_2 "onmouseover") ) )
(assert (= T_7 (not T_6 ) ) )
(assert T_7)
(assert (= T_8 (not (=  PCTEMP_LHS_2 "onmouseover")) ) )
(assert T_8)

(check-sat)
(get-model)

